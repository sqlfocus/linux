#+TITLE: 设备驱动模型
#+AUTHOR: sqlfocus



本文档摘录设备驱动模型相关操作及数据结构，以期能够更加深入理解内核各
模块儿的底层工作机理。

* 优秀语句摘录
 - 区分机制和策略时unix设备背后隐含的最好思想之一
 - 对于编写正确的内核代码来说，优良的并发管理时必须的

* 摘要
** 内核版本信息
包含头文件linux/version.h或linux/module.h后，可使用下属宏
 - UTS_RELEASE
   : 描述内核版本的字符串，如"2.6.10"
 - LINUX_VERSION_CODE
   : 内核版本的二进制表示，如2.6.10对应0x02060a
 - KERNEL_VERSION(major, minor, release)
   : 创建整数的版本号

** 模块儿知名函数
 - 必须包含的头文件
   : #include <linux/module.h>
   : #include <linux/init.h>
 - EXPORT_SYMBOL()/EXPORT_SYMBOL_GPL()
   : 从模块儿导出符号，为其他模块儿使用
   : 必须在模块儿文件的全局部分导出
 - MODULE_LICENSE("GPL v2")
   : 告知内核该模块儿的许可证
 - insmod()/modprobe()/rmmod()
   : 加载、卸载模块儿
 - module_init/module_exit()
   : 模块儿加载、退出时执行的函数
 - module_param()/module_param_array()
   : 声明参数，可通过加载模块儿传入参数
 - printk()
   : 内核的打印函数

** 设备号
 - 可通过ls -l /dev查看设备号
   : 各列含义  属性、链接数、用户名、组名、主设备号、次设备号、修改日期、名称
 - 主设备号标识设备对应的驱动程序
 - 次设备号由内核使用，确认设备文件所指的设备
 - 通过struct file_operations(linux/fs.h)结构建立设备号与驱动程序的关联
 - 操控宏MAJOR/MINOR/MKDEV()

** 通用Makfile
 #+BEGIN_EXAMPLE
 ###从内核构造系统调用
 ifneq ($(KERNELRELEASE),)
     obj-m := hello.o

 ###从用户态命令行调用
 else
     KERNELDIR ?= /lib/modules/$(shell uname -r)/build
     PWD := $(shell pwd)
 default:
     $(MAKE) -C $(KERNELDIR) M=$(PWD) modules
 endif
 #+END_EXAMPLE

* 全局变量
** cdev_map
定义在~/fs/char_dev.c，所有字符设备注册表，维护struct cdev和设备号之
间映射关系。

* 参考
 - <<linux设备驱动程序>>
 - <<深入Linux设备驱动程序内核机制>>












